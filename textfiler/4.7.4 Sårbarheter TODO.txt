Det är viktigt att välja en lämplig nivå på visibilitet för klasser och metoder. Det är onödigt att exponera mer kod än nödvändigt. Vi har försökt att hålla så mycket som möjligt private, annars protected och endast låtit de metoder som verkligen behöver vara publika vara det.

Att källkoden är öppen kan vara en sårbarhet. Vem som helst kommer åt den och då är det lättare att hitta svagheterna. Man bör vara noggrann och försiktig med vad man skickar upp till github då alla kan se det. Exempelvis är det inte lämpligt att lägga sina API-nycklar där, se Sektion 4.7.2 för hur vi hanterat det.

Html-filen sparas lokalt. Det kan ses som en sårbarhet, då den som har html-kunskap kan ändra i den, men den är å andra sidan inte publikt publicerad. Att vår applikation raderar filen om den redan existerar när metoden för att hämta väderprognosen körs kan vara en säkerhetsrisk om någon skulle ändra på vilken fil som tas bort så att det istället försvinner någon väsentlig systemfil.

Via nätverket skulle man kunna tänka sig att någon ändrar urlen för att hämta väderdata till en annan adress som matar ut gigantiska JSON, så att datorn fylls. 

En annan sårbarhet är om valideringen av inputs till applikationen inte är god nog.

Enligt https://maven.apache.org/security.html finns det inte några kända säkerhetsrisker med Maven (4.0.0) som vi använder.




